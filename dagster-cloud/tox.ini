[tox]
envlist=py38,mypy,pylint
skipsdist = True

[testenv]
setenv =
  VIRTUALENV_PIP=21.3.1
passenv = CI_* COVERALLS_REPO_TOKEN BUILDKITE* DAGSTER_GIT_REPO_DIR POSTGRES_TEST_DB_HOST, AWS_*
deps =
  -e {env:DAGSTER_GIT_REPO_DIR}/python_modules/dagster[mypy,test]
  -e {env:DAGSTER_GIT_REPO_DIR}/python_modules/dagster-test
  -e {env:DAGSTER_GIT_REPO_DIR}/python_modules/dagster-graphql
  -e {env:DAGSTER_GIT_REPO_DIR}/python_modules/dagit
  -e {env:DAGSTER_GIT_REPO_DIR}/python_modules/libraries/dagster-aws
  -e {env:DAGSTER_GIT_REPO_DIR}/python_modules/libraries/dagster-k8s
  -e {env:DAGSTER_GIT_REPO_DIR}/python_modules/libraries/dagster-docker
  -e {env:DAGSTER_GIT_REPO_DIR}/python_modules/libraries/dagster-postgres
  -e ../../integration_tests/python_modules/dagster-cloud-test-infra
  -e ../dagster-cloud-cli
  -e .
  -e ../dagster-cloud-backend[tests]
  -e ../ursula
usedevelop = True
extras =
  tests
commands =
  /bin/bash -c '! pip list --exclude-editable | grep -e dagster -e dagit'
  pytest -vv {posargs}

[testenv:mypy]
commands =
  mypy --config=../../../pyproject.toml --non-interactive --install-types {posargs} \
  # exclude test data because it includes duplicate "repo1" name
  --exclude dagster_cloud_tests/pex_tests/sample-repos \
  .

[testenv:pylint]
commands =
  pylint -j0 --rcfile=../../../pyproject.toml {posargs} dagster_cloud dagster_cloud_tests
